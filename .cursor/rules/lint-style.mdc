---
alwaysApply: true
---
<rule>
description: 모든 코드 요청은 린트 오류(ESLint/TS) 없이 동작해야 함
match: .*
prompt: |
  이 변경은 린트 오류가 0이어야 합니다.
  타입스크립트 오류를 없애고, any 사용을 최소화하세요.
  기존 기능/UX는 절대 제거하지 말고, 필요한 최소 수정만 적용하세요.
  사용하지 않는 변수/임포트 제거, 미정의 변수 금지, 불필요한 eslint-disable 지시어 금지.
</rule>

<rule>
description: Framer 컴포넌트 표준화
match: .*(Framer|component|Component|property controls|addPropertyControls).*
prompt: |
  Framer 환경을 전제로 작성하고, export default로 컴포넌트를 내보내세요.
  addPropertyControls를 정의하되, 기존 컨트롤 키/타입은 보존하고 새 컨트롤 추가 시 충돌을 피하세요.
  외부 CSS/라이브러리 없이 inline style만 사용하세요 (Framer-friendly).
  이벤트 핸들러는 useCallback으로 메모화하고, 무거운 계산은 useMemo로 감싸세요.
</rule>

<rule>
description: Roarc UI tokens & primitives 필수 활용 (theme, mergeStyles, Button, Card)
match: .*
prompt: |
  아래 로컬 UI 토큰/프리미티브를 반드시 활용하세요:
  - theme, mergeStyles, Button, Card
  해당 심볼들이 현재 파일 범위에 없으면:
    1) 같은 파일 최상단에 안전하게 삽입하거나,
    2) 프로젝트 내 공유 파일에서 import 하되 경로는 상대경로로 유지 (예: import { theme, mergeStyles, Button, Card } from "./ui-primitives").
  토큰 값(theme.color, theme.text 등)은 변경하지 말고 읽기만 하세요.
  스타일은 반드시 mergeStyles(...) + inline style로 구성하세요.
  버튼/카드/섹션은 제공된 Button/Card 컴포넌트를 우선 사용하고, 새로운 컴포넌트는 동일한 토큰 사용 규칙을 따르세요.
</rule>

<rule>
description: UI/UX 일관성 — 단일 파일·토큰 우선·접근성
match: .*
prompt: |
  단일 파일 구성과 inline style을 유지하세요. 외부 CSS-in-JS/라이브러리는 추가하지 않습니다.
  여백/폰트/색상/경계/쉐도우는 theme에서 가져오세요 (예: theme.space, theme.text, theme.color, theme.radius, theme.shadow).
  터치 타겟은 최소 40px, 버튼/링크에는 접근성 속성(aria-label, role)을 추가하세요.
  키보드 포커스가 보이도록 outline과 :focus-visible 처리를 반영하세요 (inline style로).
  모바일 성능: 불필요한 re-render 방지(React.memo), 이미지/미디어는 지연 로드 패턴을 사용.
</rule>

<rule>
description: 변경 안전장치(기능 보존, 최소 diff, 회귀 방지)
match: .*
prompt: |
  기존 동작은 100% 동일하게 유지하세요. 리팩토링은 순수하게 린트/타입/성능 목적일 때만 최소 범위로 적용하세요.
  공용 props/함수 시그니처/키 이름을 바꾸지 마세요(호환성 깨지면 안 됨).
  삭제 대신 대체(Deprecated 주석)하거나 하위 호환 래퍼를 제공하세요.
  수정 후: 주요 상호작용(클릭/입력/공유/지도/갤러리 등)이 변함없이 동작하도록 간단한 로컬 테스트 시나리오를 주석으로 남기세요.
</rule>

<rule>
description: 형식(Prettier-친화) 및 임포트/정렬
match: .*
prompt: |
  임포트는 사용 순서대로 정리하고, 미사용 임포트 제거하세요.
  따옴표/세미콜론/줄바꿈 등 포맷은 Prettier 기본 권장에 맞춥니다(충돌 시 ESLint 규칙 우선).
  객체/배열 리터럴은 trailing comma 허용, 80~100자 선에서 가독성 줄바꿈을 적용하세요.
  JSX 속성/이벤트 핸들러는 과도한 한 줄 표기를 피하고 의미단위로 줄바꿈하세요.
</rule>

<rule>
description: 성능 & 번들 크기(Framer 배포 최적화)
match: .*
prompt: |
  대용량 에셋(이미지/오디오/폰트) 직접 번들 금지: 외부 CDN/HLS 등 스트리밍 또는 지연 로드 전략을 명시하세요.
  런타임 분기(브라우저 전용 API)는 안전 가드(window 존재 확인)로 감싸세요.
  애니메이션/리스트는 key 안정성 보장, 불필요한 reflow 유발 스타일을 지양하세요.
</rule>